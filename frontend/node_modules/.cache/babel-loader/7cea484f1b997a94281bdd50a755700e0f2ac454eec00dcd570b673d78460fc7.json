{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\chatwithai\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { ScaleLoader } from 'react-spinners';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userMessage = {\n      text: prompt,\n      user: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setPrompt('');\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5000/generate', {\n        prompt\n      });\n      const aiMessage = {\n        text: res.data.response,\n        user: false\n      };\n      setMessages(prevMessages => [...prevMessages, aiMessage]);\n    } catch (error) {\n      console.error('Error calling the server:', error);\n      const errorMessage = {\n        text: 'Error: Unable to fetch response',\n        user: false\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'left',\n        marginLeft: '20px',\n        color: 'lightslategray'\n      },\n      children: \"Chat with AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.user ? 'user' : 'ai'}`,\n          dangerouslySetInnerHTML: {\n            __html: message.text\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message ai\",\n          children: /*#__PURE__*/_jsxDEV(ScaleLoader, {\n            color: \"#123abc\",\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Enter your message\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./images/ta.png\",\n          style: \"width: 20px; height: 20px;\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Na112aZ5Pyf8WaxCbuL6SxH1ftA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","ScaleLoader","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","messages","setMessages","loading","setLoading","handleSubmit","e","preventDefault","userMessage","text","user","prevMessages","res","post","aiMessage","data","response","error","console","errorMessage","children","style","textAlign","marginLeft","color","fileName","_jsxFileName","lineNumber","columnNumber","className","map","message","index","dangerouslySetInnerHTML","__html","onSubmit","type","value","onChange","target","placeholder","required","src","_c","$RefreshReg$"],"sources":["C:/Code/chatwithai/frontend/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { ScaleLoader } from 'react-spinners';\nimport './App.css';\n\nfunction App() {\n  const [prompt, setPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const userMessage = { text: prompt, user: true };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setPrompt('');\n    setLoading(true);\n\n    try {\n      const res = await axios.post('http://localhost:5000/generate', { prompt });\n      const aiMessage = { text: res.data.response, user: false };\n      setMessages((prevMessages) => [...prevMessages, aiMessage]);\n    } catch (error) {\n      console.error('Error calling the server:', error);\n      const errorMessage = { text: 'Error: Unable to fetch response', user: false };\n      setMessages((prevMessages) => [...prevMessages, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div><h3 style={{textAlign : 'left',marginLeft : '20px', color : 'lightslategray'}}>Chat with AI</h3>\n    <div className=\"App\">\n      \n      \n      <div className=\"chat-container\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.user ? 'user' : 'ai'}`}\n            dangerouslySetInnerHTML={{ __html: message.text }}\n          />\n        ))}\n        {loading && (\n          <div className=\"message ai\">\n            <ScaleLoader color={\"#123abc\"} loading={loading} />\n          </div>\n        )}\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"input-container\">\n        <input\n          type=\"text\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          placeholder=\"Enter your message\"\n          required\n        />\n        <img src='./images/ta.png' style=\"width: 20px; height: 20px;\"/>\n        <button className=\"btn btn-primary\" type=\"submit\">Send</button>\n      </form>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}